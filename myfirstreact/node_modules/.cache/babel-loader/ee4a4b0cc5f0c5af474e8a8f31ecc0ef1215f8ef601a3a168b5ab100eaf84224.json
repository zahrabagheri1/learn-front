{"ast":null,"code":"var _jsxFileName = \"E:\\\\1MySource\\\\learn-front-end-development\\\\myfirstreact\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet str = \"Do you?!\";\n//* With JSX you can write expressions inside curly braces { }.\nlet myElement0 = /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: [\"I Love JSX! \", str]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 18\n}, this);\n\n//* To write HTML on multiple lines, put the HTML inside parentheses ()\nconst myElement1 = /*#__PURE__*/_jsxDEV(\"ul\", {\n  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n    children: \"Apples\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n    children: \"Bananas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n    children: \"Cherries\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n\n//* The HTML code must be wrapped in ONE top level element.\nconst myElement2 = /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"I am a paragraph.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"I am a paragraph too.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this);\n\n// <React.Fragment> </React.Fragment>\nconst myElement3 = /*#__PURE__*/_jsxDEV(React.Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"I am a paragraph.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"I am a paragraph too.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this);\nReactDOM.render(myElement3, document.getElementById('root'));\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n//?","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","str","myElement0","children","fileName","_jsxFileName","lineNumber","columnNumber","myElement1","myElement2","myElement3","Fragment","render","document","getElementById"],"sources":["E:/1MySource/learn-front-end-development/myfirstreact/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nlet str = \"Do you?!\"\n//* With JSX you can write expressions inside curly braces { }.\nlet myElement0 = <h1>I Love JSX! {str}</h1>\n\n//* To write HTML on multiple lines, put the HTML inside parentheses ()\nconst myElement1 = (\n  <ul>\n    <li>Apples</li>\n    <li>Bananas</li>\n    <li>Cherries</li>\n  </ul>\n);\n\n//* The HTML code must be wrapped in ONE top level element.\nconst myElement2 = (\n  <div>\n    <p>I am a paragraph.</p>\n    <p>I am a paragraph too.</p>\n  </div>\n);\n\n// <React.Fragment> </React.Fragment>\nconst myElement3 = (\n  <React.Fragment>\n    <p>I am a paragraph.</p>\n    <p>I am a paragraph too.</p>\n  </React.Fragment>\n);\n\nReactDOM.render( myElement3, \n document.getElementById('root')\n\n);\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n    \n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\n\n\n\n//?\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,GAAG,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,IAAIC,GAAG,GAAG,UAAU;AACpB;AACA,IAAIC,UAAU,gBAAGF,OAAA;EAAAG,QAAA,GAAI,cAAY,EAACF,GAAG;AAAA;EAAAG,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAK,CAAC;;AAE3C;AACA,MAAMC,UAAU,gBACdR,OAAA;EAAAG,QAAA,gBACEH,OAAA;IAAAG,QAAA,EAAI;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eACfP,OAAA;IAAAG,QAAA,EAAI;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eAChBP,OAAA;IAAAG,QAAA,EAAI;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACf,CACL;;AAED;AACA,MAAME,UAAU,gBACdT,OAAA;EAAAG,QAAA,gBACEH,OAAA;IAAAG,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,eACxBP,OAAA;IAAAG,QAAA,EAAG;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACzB,CACN;;AAED;AACA,MAAMG,UAAU,gBACdV,OAAA,CAACJ,KAAK,CAACe,QAAQ;EAAAR,QAAA,gBACbH,OAAA;IAAAG,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,eACxBP,OAAA;IAAAG,QAAA,EAAG;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACd,CACjB;AAEDV,QAAQ,CAACe,MAAM,CAAEF,UAAU,EAC1BG,QAAQ,CAACC,cAAc,CAAC,MAAM,CAE/B,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAMA"},"metadata":{},"sourceType":"module","externalDependencies":[]}