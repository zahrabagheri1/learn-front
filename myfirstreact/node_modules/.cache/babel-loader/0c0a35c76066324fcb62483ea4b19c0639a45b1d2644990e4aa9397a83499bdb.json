{"ast":null,"code":"var _jsxFileName = \"E:\\\\1MySource\\\\learn-front-end-development\\\\myfirstreact\\\\src\\\\component\\\\App.js\";\nimport React from \"react\";\nimport Car from \"./Car\";\n\n//? React Components\n//! When creating a React component, the component's name MUST start with an upper case letter.\n//* Class Component\n//* A class component must include the extends React.Component statement. This statement creates an inheritance to React.Component, and gives your component access to React.Component's functions.\n//* The component also requires a render() method, this method returns HTML.\n\n// class App extends React.Component {\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <h1>Wellcome to my website</h1>\n//         <p>Class Component</p>\n//       </React.Fragment>\n//     );\n//   }\n// }\n//\n\n//*Function Component\n//*Here is the same example as above, but created using a Function component instead.\n//* A Function component also returns HTML, and behaves much the same way as a Class component, but Function components can be written using much less code, are easier to understand, and will be preferred in this tutorial.\n//*\n\n// function App(){\n//     return(\n//         <React.Fragment>\n//             <h1>Wellcome to my website</h1>\n//             <p>Function Component</p>\n//         </React.Fragment>\n//     );\n// }\n\n// Todo: Constructor\n//* The constructor is a method used to initialize an object's state in a class. It automatically called during the creation of an object in a class.\n//* The concept of a constructor is the same in React. The constructor in a React component is called before the component is mounted.\n//* Constructor(props){\n//*     super(props);\n//* }\n// صفحه زمانی اپدیت میشه یا مجدد رندر می شود که استیت تغییر کند\n\n// class App extends React.Component {\n// constructor(){\n//     super()\n//     this.state = {\n//         color: \"red\",\n//         name: \"zahra\",\n//     }\n// }\n\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             color: \"red\",\n//             name: props.name,\n//         }\n//     }\n\n//   render() {\n//     // console.log(this.props.name);\n//     return (\n//       <React.Fragment>\n//         <h1>Wellcome to my website</h1>\n//         <p>my name is {this.state.name} and my fav color is {this.state.color}</p>\n//       </React.Fragment>\n//     );\n//   }\n// }\n\n// * Props\n//* props stands for properties.\n//* Props are arguments passed into React components.\n//* Props are passed to components via HTML attributes.\n\n// function App(props){\n//     return(\n//       <React.Fragment>\n//         <h1>Wellcome to my website</h1>\n//         <p>my name is {props.name} and my fav color is {props.color}</p>\n//         <Car/>\n//       </React.Fragment>\n//     )\n// }\n\n// class App extends React.Component {\n//   render() {\n//     const carditail = {\n//       color: \"yellow\",\n//       model: \"mostang\",\n//       year: \"2014\",\n//     };\n//     return (\n//       <React.Fragment>\n//         <h1>Wellcome to my website</h1>\n//         <p>\n//           my name is {this.props.name} and my fav color is {this.props.color}\n//         </p>\n//         <Car carditail={carditail} />\n//       </React.Fragment>\n//     );\n//   }\n// }\n\n// * state\n//* he state is a built-in React object that is used to contain data or information about the component.\n//* A component's state can change over time; whenever it changes, the component re-renders.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      brand: \"Ford\",\n      model: \"Mustang\",\n      color: \"Black\",\n      year: 2015\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"My Car \", this.state.brand]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// Todo: Life cycle : each component in react has lifecycle \n// Todo: Mouting puttting element in to the DOM\n// * constructor()\n// a method used to initialize an object's state in a class.\n// It automatically called during the creation of an object in a class\n// Constructor(props){ \n//   super(props);   \n//   this.stet =\n// }\n\n//*  getDerivedStateFromProps()\n//* render()\n//*\n\n// Todo: Updating\n// Todo: Unmouting\n\nexport default App;","map":{"version":3,"names":["React","Car","jsxDEV","_jsxDEV","App","Component","constructor","props","state","brand","model","color","year","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["E:/1MySource/learn-front-end-development/myfirstreact/src/component/App.js"],"sourcesContent":["import React from \"react\";\r\nimport Car from \"./Car\";\r\n\r\n//? React Components\r\n//! When creating a React component, the component's name MUST start with an upper case letter.\r\n//* Class Component\r\n//* A class component must include the extends React.Component statement. This statement creates an inheritance to React.Component, and gives your component access to React.Component's functions.\r\n//* The component also requires a render() method, this method returns HTML.\r\n\r\n// class App extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <React.Fragment>\r\n//         <h1>Wellcome to my website</h1>\r\n//         <p>Class Component</p>\r\n//       </React.Fragment>\r\n//     );\r\n//   }\r\n// }\r\n//\r\n\r\n//*Function Component\r\n//*Here is the same example as above, but created using a Function component instead.\r\n//* A Function component also returns HTML, and behaves much the same way as a Class component, but Function components can be written using much less code, are easier to understand, and will be preferred in this tutorial.\r\n//*\r\n\r\n// function App(){\r\n//     return(\r\n//         <React.Fragment>\r\n//             <h1>Wellcome to my website</h1>\r\n//             <p>Function Component</p>\r\n//         </React.Fragment>\r\n//     );\r\n// }\r\n\r\n// Todo: Constructor\r\n//* The constructor is a method used to initialize an object's state in a class. It automatically called during the creation of an object in a class.\r\n//* The concept of a constructor is the same in React. The constructor in a React component is called before the component is mounted.\r\n//* Constructor(props){\r\n//*     super(props);\r\n//* }\r\n// صفحه زمانی اپدیت میشه یا مجدد رندر می شود که استیت تغییر کند\r\n\r\n// class App extends React.Component {\r\n// constructor(){\r\n//     super()\r\n//     this.state = {\r\n//         color: \"red\",\r\n//         name: \"zahra\",\r\n//     }\r\n// }\r\n\r\n//     constructor(props){\r\n//         super(props)\r\n//         this.state = {\r\n//             color: \"red\",\r\n//             name: props.name,\r\n//         }\r\n//     }\r\n\r\n//   render() {\r\n//     // console.log(this.props.name);\r\n//     return (\r\n//       <React.Fragment>\r\n//         <h1>Wellcome to my website</h1>\r\n//         <p>my name is {this.state.name} and my fav color is {this.state.color}</p>\r\n//       </React.Fragment>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// * Props\r\n//* props stands for properties.\r\n//* Props are arguments passed into React components.\r\n//* Props are passed to components via HTML attributes.\r\n\r\n// function App(props){\r\n//     return(\r\n//       <React.Fragment>\r\n//         <h1>Wellcome to my website</h1>\r\n//         <p>my name is {props.name} and my fav color is {props.color}</p>\r\n//         <Car/>\r\n//       </React.Fragment>\r\n//     )\r\n// }\r\n\r\n// class App extends React.Component {\r\n//   render() {\r\n//     const carditail = {\r\n//       color: \"yellow\",\r\n//       model: \"mostang\",\r\n//       year: \"2014\",\r\n//     };\r\n//     return (\r\n//       <React.Fragment>\r\n//         <h1>Wellcome to my website</h1>\r\n//         <p>\r\n//           my name is {this.props.name} and my fav color is {this.props.color}\r\n//         </p>\r\n//         <Car carditail={carditail} />\r\n//       </React.Fragment>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// * state\r\n//* he state is a built-in React object that is used to contain data or information about the component.\r\n//* A component's state can change over time; whenever it changes, the component re-renders.\r\n\r\nclass App extends  React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      brand : \"Ford\",\r\n      model : \"Mustang\",\r\n      color : \"Black\",\r\n      year : 2015\r\n    };\r\n  }\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h1>My Car {this.state.brand}</h1>\r\n      </div>\r\n    )\r\n    }\r\n}\r\n\r\n// Todo: Life cycle : each component in react has lifecycle \r\n// Todo: Mouting puttting element in to the DOM\r\n// * constructor()\r\n// a method used to initialize an object's state in a class.\r\n// It automatically called during the creation of an object in a class\r\n// Constructor(props){ \r\n//   super(props);   \r\n//   this.stet =\r\n// }\r\n\r\n//*  getDerivedStateFromProps()\r\n//* render()\r\n//*\r\n\r\n\r\n\r\n// Todo: Updating\r\n// Todo: Unmouting\r\n\r\n\r\n\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;;AAEvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,SAAUJ,KAAK,CAACK,SAAS;EAChCC,WAAWA,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAE;MACVC,KAAK,EAAG,MAAM;MACdC,KAAK,EAAG,SAAS;MACjBC,KAAK,EAAG,OAAO;MACfC,IAAI,EAAG;IACT,CAAC;EACH;EACAC,MAAMA,CAAA,EAAE;IACN,oBACEV,OAAA;MAAAW,QAAA,eACEX,OAAA;QAAAW,QAAA,GAAI,SAAO,EAAC,IAAI,CAACN,KAAK,CAACC,KAAK;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAER;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;;AAKA,eAAed,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}