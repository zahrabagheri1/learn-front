{"ast":null,"code":"var _jsxFileName = \"E:\\\\1MySource\\\\learn-front-end-development\\\\myfirstreact\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Event from './component/Event';\nimport App from './component/App';\nimport Car from './component/Car';\n\n// let str = \"Do you?!\"\n//* With JSX you can write expressions inside curly braces { }.\n// let myElement0 = <h1>I Love JSX! {str}</h1>\n\n//* To write HTML on multiple lines, put the HTML inside parentheses ()\n// const myElement1 = (\n//   <ul>\n//     <li>Apples</li>\n//     <li>Bananas</li>\n//     <li>Cherries</li>\n//   </ul>\n// );\n\n//* The HTML code must be wrapped in ONE top level element.\n// const myElement2 = (\n//   <div>\n//     <p>I am a paragraph.</p>\n//     <p>I am a paragraph too.</p>\n//   </div>\n// );\n\n// <React.Fragment> </React.Fragment>\n// const myElement3 = (\n//   <React.Fragment>\n//     <p>I am a paragraph.</p>\n//     <p>I am a paragraph too.</p>\n//   </React.Fragment>\n// );\n\n// ReactDOM.render( <App name=\"ali\"  color= \"blue\"/>, \n//  document.getElementById('root')\n\n// );\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(Event, {\n  name: \"ali\",\n  favritecolor: \"blue\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 18\n}, this), document.getElementById('root'));\nReactDOM.render( /*#__PURE__*/_jsxDEV(Event, {\n  name: \"ali\",\n  favritecolor: \"blue\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 18\n}, this), document.getElementById('root'));\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();","map":{"version":3,"names":["React","ReactDOM","Event","App","Car","jsxDEV","_jsxDEV","render","name","favritecolor","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["E:/1MySource/learn-front-end-development/myfirstreact/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Event from './component/Event'\nimport App from './component/App'\nimport Car from './component/Car';\n\n// let str = \"Do you?!\"\n//* With JSX you can write expressions inside curly braces { }.\n// let myElement0 = <h1>I Love JSX! {str}</h1>\n\n//* To write HTML on multiple lines, put the HTML inside parentheses ()\n// const myElement1 = (\n//   <ul>\n//     <li>Apples</li>\n//     <li>Bananas</li>\n//     <li>Cherries</li>\n//   </ul>\n// );\n\n//* The HTML code must be wrapped in ONE top level element.\n// const myElement2 = (\n//   <div>\n//     <p>I am a paragraph.</p>\n//     <p>I am a paragraph too.</p>\n//   </div>\n// );\n\n// <React.Fragment> </React.Fragment>\n// const myElement3 = (\n//   <React.Fragment>\n//     <p>I am a paragraph.</p>\n//     <p>I am a paragraph too.</p>\n//   </React.Fragment>\n// );\n\n// ReactDOM.render( <App name=\"ali\"  color= \"blue\"/>, \n//  document.getElementById('root')\n\n// );\n\n\nReactDOM.render( <Event name=\"ali\"  favritecolor= \"blue\"/>, \n document.getElementById('root')\n\n);\n\n\nReactDOM.render( <Event name=\"ali\"  favritecolor= \"blue\"/>, \n document.getElementById('root')\n\n);\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n    \n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\n\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,GAAG,MAAM,iBAAiB;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGAL,QAAQ,CAACM,MAAM,eAAED,OAAA,CAACJ,KAAK;EAACM,IAAI,EAAC,KAAK;EAAEC,YAAY,EAAE;AAAM;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAC,CAAC,EACzDC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAE/B,CAAC;AAGDd,QAAQ,CAACM,MAAM,eAAED,OAAA,CAACJ,KAAK;EAACM,IAAI,EAAC,KAAK;EAAEC,YAAY,EAAE;AAAM;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAC,CAAC,EACzDC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAE/B,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}