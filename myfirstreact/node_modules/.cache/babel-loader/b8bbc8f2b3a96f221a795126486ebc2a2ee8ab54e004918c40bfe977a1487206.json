{"ast":null,"code":"var _jsxFileName = \"E:\\\\1MySource\\\\learn-front-end-development\\\\myfirstreact\\\\src\\\\App.js\";\nimport React from \"react\";\n\n//? React Components\n//! When creating a React component, the component's name MUST start with an upper case letter.\n//* Class Component\n//* A class component must include the extends React.Component statement. This statement creates an inheritance to React.Component, and gives your component access to React.Component's functions.\n//* The component also requires a render() method, this method returns HTML.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wellcome to my website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"slam khubi?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;\n\n//*Function Component\n//*Here is the same example as above, but created using a Function component instead.\n//* A Function component also returns HTML, and behaves much the same way as a Class component, but Function components can be written using much less code, are easier to understand, and will be preferred in this tutorial.\n//*","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","Component","render","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["E:/1MySource/learn-front-end-development/myfirstreact/src/App.js"],"sourcesContent":["import React from \"react\";\r\n\r\n\r\n//? React Components\r\n//! When creating a React component, the component's name MUST start with an upper case letter.\r\n//* Class Component\r\n//* A class component must include the extends React.Component statement. This statement creates an inheritance to React.Component, and gives your component access to React.Component's functions.\r\n//* The component also requires a render() method, this method returns HTML.\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h1>Wellcome to my website</h1>\r\n                <p>slam khubi?</p>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n//*Function Component\r\n//*Here is the same example as above, but created using a Function component instead.\r\n//* A Function component also returns HTML, and behaves much the same way as a Class component, but Function components can be written using much less code, are easier to understand, and will be preferred in this tutorial.\r\n//*"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAGzB;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,SAASH,KAAK,CAACI,SAAS;EAC7BC,MAAMA,CAAA,EAAE;IACJ,oBACIH,OAAA,CAACF,KAAK,CAACM,QAAQ;MAAAC,QAAA,gBACXL,OAAA;QAAAK,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BT,OAAA;QAAAK,QAAA,EAAG;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEzB;AACJ;AAEA,eAAeR,GAAG;;AAGlB;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}