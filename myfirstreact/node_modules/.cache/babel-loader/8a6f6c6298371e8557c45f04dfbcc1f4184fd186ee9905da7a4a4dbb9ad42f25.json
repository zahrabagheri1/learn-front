{"ast":null,"code":"import React from \"react\";\n\n//? React Components\n//! When creating a React component, the component's name MUST start with an upper case letter.\n//* Class Component\n//* A class component must include the extends React.Component statement. This statement creates an inheritance to React.Component, and gives your component access to React.Component's functions.\n//* The component also requires a render() method, this method returns HTML.\n\n// class App extends React.Component {\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <h1>Wellcome to my website</h1>\n//         <p>Class Component</p>\n//       </React.Fragment>\n//     );\n//   }\n// }\n// \n// export default App;\n\n//*Function Component\n//*Here is the same example as above, but created using a Function component instead.\n//* A Function component also returns HTML, and behaves much the same way as a Class component, but Function components can be written using much less code, are easier to understand, and will be preferred in this tutorial.\n//*\n\n// function App(){\n//     return(\n//         <React.Fragment>\n//             <h1>Wellcome to my website</h1>\n//             <p>Function Component</p>\n//         </React.Fragment>  \n//     );\n// }\n\n// export default App;\n\n// Todo: Constructor\n//* The constructor is a method used to initialize an object's state in a class. It automatically called during the creation of an object in a class.\n//* The concept of a constructor is the same in React. The constructor in a React component is called before the component is mounted.\n\n// class App extends React.Component {\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <h1>Wellcome to my website</h1>\n//         <p>Class Component</p>\n//       </React.Fragment>\n//     );\n//   }\n// }\n// \n// export default App;","map":{"version":3,"names":["React"],"sources":["E:/1MySource/learn-front-end-development/myfirstreact/src/App.js"],"sourcesContent":["import React from \"react\";\r\n\r\n//? React Components\r\n//! When creating a React component, the component's name MUST start with an upper case letter.\r\n//* Class Component\r\n//* A class component must include the extends React.Component statement. This statement creates an inheritance to React.Component, and gives your component access to React.Component's functions.\r\n//* The component also requires a render() method, this method returns HTML.\r\n\r\n// class App extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <React.Fragment>\r\n//         <h1>Wellcome to my website</h1>\r\n//         <p>Class Component</p>\r\n//       </React.Fragment>\r\n//     );\r\n//   }\r\n// }\r\n// \r\n// export default App;\r\n\r\n\r\n\r\n//*Function Component\r\n//*Here is the same example as above, but created using a Function component instead.\r\n//* A Function component also returns HTML, and behaves much the same way as a Class component, but Function components can be written using much less code, are easier to understand, and will be preferred in this tutorial.\r\n//*\r\n\r\n// function App(){\r\n//     return(\r\n//         <React.Fragment>\r\n//             <h1>Wellcome to my website</h1>\r\n//             <p>Function Component</p>\r\n//         </React.Fragment>  \r\n//     );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n// Todo: Constructor\r\n//* The constructor is a method used to initialize an object's state in a class. It automatically called during the creation of an object in a class.\r\n//* The concept of a constructor is the same in React. The constructor in a React component is called before the component is mounted.\r\n\r\n// class App extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <React.Fragment>\r\n//         <h1>Wellcome to my website</h1>\r\n//         <p>Class Component</p>\r\n//       </React.Fragment>\r\n//     );\r\n//   }\r\n// }\r\n// \r\n// export default App;\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}