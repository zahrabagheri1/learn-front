{"ast":null,"code":"var _jsxFileName = \"E:\\\\1MySource\\\\learn-front-end-development\\\\myfirstreact\\\\src\\\\App.js\";\nimport React from \"react\";\n\n//? React Components\n//! When creating a React component, the component's name MUST start with an upper case letter.\n//* Class Component\n//* A class component must include the extends React.Component statement. This statement creates an inheritance to React.Component, and gives your component access to React.Component's functions.\n//* The component also requires a render() method, this method returns HTML.\n\n// class App extends React.Component {\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <h1>Wellcome to my website</h1>\n//         <p>Class Component</p>\n//       </React.Fragment>\n//     );\n//   }\n// }\n// \n// export default App;\n\n//*Function Component\n//*Here is the same example as above, but created using a Function component instead.\n//* A Function component also returns HTML, and behaves much the same way as a Class component, but Function components can be written using much less code, are easier to understand, and will be preferred in this tutorial.\n//*\n\n// function App(){\n//     return(\n//         <React.Fragment>\n//             <h1>Wellcome to my website</h1>\n//             <p>Function Component</p>\n//         </React.Fragment>  \n//     );\n// }\n\n// export default App;\n\n// Todo: Constructor\n//* The constructor is a method used to initialize an object's state in a class. It automatically called during the creation of an object in a class.\n//* The concept of a constructor is the same in React. The constructor in a React component is called before the component is mounted.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor() {\n    super();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wellcome to my website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Class Component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","Component","constructor","render","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["E:/1MySource/learn-front-end-development/myfirstreact/src/App.js"],"sourcesContent":["import React from \"react\";\r\n\r\n//? React Components\r\n//! When creating a React component, the component's name MUST start with an upper case letter.\r\n//* Class Component\r\n//* A class component must include the extends React.Component statement. This statement creates an inheritance to React.Component, and gives your component access to React.Component's functions.\r\n//* The component also requires a render() method, this method returns HTML.\r\n\r\n// class App extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <React.Fragment>\r\n//         <h1>Wellcome to my website</h1>\r\n//         <p>Class Component</p>\r\n//       </React.Fragment>\r\n//     );\r\n//   }\r\n// }\r\n// \r\n// export default App;\r\n\r\n\r\n\r\n//*Function Component\r\n//*Here is the same example as above, but created using a Function component instead.\r\n//* A Function component also returns HTML, and behaves much the same way as a Class component, but Function components can be written using much less code, are easier to understand, and will be preferred in this tutorial.\r\n//*\r\n\r\n// function App(){\r\n//     return(\r\n//         <React.Fragment>\r\n//             <h1>Wellcome to my website</h1>\r\n//             <p>Function Component</p>\r\n//         </React.Fragment>  \r\n//     );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n// Todo: Constructor\r\n//* The constructor is a method used to initialize an object's state in a class. It automatically called during the creation of an object in a class.\r\n//* The concept of a constructor is the same in React. The constructor in a React component is called before the component is mounted.\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super()\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Wellcome to my website</h1>\r\n        <p>Class Component</p>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,GAAG,SAASH,KAAK,CAACI,SAAS,CAAC;EAC9BC,WAAWA,CAAA,EAAE;IACT,KAAK,CAAC,CAAC;EACX;EAEFC,MAAMA,CAAA,EAAG;IACP,oBACEJ,OAAA,CAACF,KAAK,CAACO,QAAQ;MAAAC,QAAA,gBACbN,OAAA;QAAAM,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BV,OAAA;QAAAM,QAAA,EAAG;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAErB;AACF;AAEA,eAAeT,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}